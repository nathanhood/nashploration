extends ../shared/template

block content

  .content-wrapper
    mixin back('Edit Group')

    .email-invite-messages
    
    if (deleteGroupError.length > 0)
      .messages
        p= deleteGroupError

    form#delete-group-form(action='/groups/delete', method='POST')
      input(type='text', name='groupId', value='#{group._id}' hidden)
      input(type='text', name='groupName', value='#{group.name}', hidden)
    button.delete-group Delete Group

    .border
    if (user.isOwner(group.owner))
      .group-name-container
        p.label GROUP NAME
        .clear
        h1.group-name(data-id='#{group._id}')= group.name
        button.edit-group-name edit
      .group-name-edit-container(hidden)
        input.group-name-input(type='text', value='#{group.name}')
        button.cancel-name cancel
        button.submit-group-name submit

      .border
      .group-description-container
        p.label GROUP DESCRIPTION
        p.group-description= group.description
        button.edit-group-description edit
      .group-description-edit-container(hidden)
        textarea.group-description-input #{group.description}
        button.cancel-description cancel
        button.submit-group-description submit

      .border
      button.add-member-button + Add a Member
      .add-member-info(hidden)
        input(type='email', name='email', placeholder='Email')
        input(type='text', name='name', placeholder='Name')
        .clear
        button.send-member-invite Send Invitation

      .border
      h2 Group Members
      if (members)
        ul
          each member in members
            li
              img.profile-picture(src=member.photo.filePath)
              span Nickname:
              h3= member.nickName
              span Username:
              h3.member-username= member.userName
              button.remove-group-member(data-id='#{member._id}') Remove From Group
      else
        p There are no group members

block scripts
  script(src='/js/es6/compiled/edit-group.js')
